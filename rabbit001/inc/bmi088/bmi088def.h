#ifndef BMI088DEF_H
#define BMI088DEF_H

#include "bmi088reg.h"

#include <cstdint>

#define BMI088_TEMP_FACTOR 0.125f
#define BMI088_TEMP_OFFSET 23.0f

#define BMI088_WRITE_ACCEL_REG_NUM  6
#define BMI088_WRITE_GYRO_REG_NUM   6

#define BMI088_GYRO_DATA_READY_BIT          0
#define BMI088_ACCEL_DATA_READY_BIT         1
#define BMI088_ACCEL_TEMP_DATA_READY_BIT    2

#define BMI088_LONG_DELAY_TIME 100
#define BMI088_WAIT_TIME 100

// #define BMI088_ACCEL_RANGE_3G
// #define BMI088_ACCEL_RANGE_6G
// #define BMI088_ACCEL_RANGE_12G
// #define BMI088_ACCEL_RANGE_24G

// #define BMI088_GYRO_RANGE_2000
// #define BMI088_GYRO_RANGE_1000
// #define BMI088_GYRO_RANGE_500
// #define BMI088_GYRO_RANGE_250
// #define BMI088_GYRO_RANGE_125

#define BMI088_ACCEL_3G_SEN     0.00089743589740
#define BMI088_ACCEL_6G_SEN     0.00179443359375
#define BMI088_ACCEL_12G_SEN    0.00358886718750
#define BMI088_ACCEL_24G_SEN    0.00717773437500

#define BMI088_GYRO_2000_SEN    0.001065264436031695298415338603810000
#define BMI088_GYRO_1000_SEN    0.000532632218015847649207669301906930
#define BMI088_GYRO_500_SEN     0.000266316109007923824603834650953460
#define BMI088_GYRO_250_SEN     0.000133158054503961912301917325476730
#define BMI088_GYRO_125_SEN     0.000066579027251980956150958662738366

enum {
    BMI088_NO_ERROR                         = 0x00,
    BMI088_ACCEL_PWR_CTRL_ERROR             = 0x01,
    BMI088_ACCEL_PWR_CONF_ERROR             = 0x02,
    BMI088_ACCEL_CONF_ERROR                 = 0x03,
    BMI088_ACCEL_SELF_TEST_ERROR            = 0x04,
    BMI088_ACCEL_RANGE_ERROR                = 0x05,
    BMI088_INT1_IO_CTRL_ERROR               = 0x06,
    BMI088_INT_MAP_DATA_ERROR               = 0x07,
    BMI088_GYRO_RANGE_ERROR                 = 0x08,
    BMI088_GYRO_BANDWIDTH_ERROR             = 0x09,
    BMI088_GYRO_LPM1_ERROR                  = 0x0A,
    BMI088_GYRO_CTRL_ERROR                  = 0x0B,
    BMI088_GYRO_INT3_INT4_IO_CONFIG_ERROR   = 0x0C,
    BMI088_GYRO_INT3_INT4_IO_MAP_ERROR      = 0x0D,

    BMI088_SELF_TEST_ACCEL_ERROR            = 0x80,
    BMI088_SELF_TEST_GYRO_ERROR             = 0x40,
    BMI088_NO_SENSOR                        = 0xFF,
};

static const uint8_t BMI088_accel_reg_config[BMI088_WRITE_ACCEL_REG_NUM][3] = {
    {BMI088_ACCEL_PWR_CTRL,     BMI088_ACCEL_ENABLE_ACCEL_ON,                                                           BMI088_ACCEL_PWR_CTRL_ERROR},
    {BMI088_ACCEL_PWR_CONFIG,   BMI088_ACCEL_PWR_ACTIVE_MODE,                                                           BMI088_ACCEL_PWR_CONF_ERROR},
    {BMI088_ACCEL_CONFIG,       BMI088_ACCEL_NORMAL| BMI088_ACCEL_100_HZ | BMI088_ACCEL_CONFIG_MUST_SET,                BMI088_ACCEL_CONF_ERROR},
    {BMI088_ACCEL_RANGE,        BMI088_ACCEL_RANGE_3G,                                                                  BMI088_ACCEL_RANGE_ERROR},
    {BMI088_INT1_IO_CTRL,       BMI088_ACCEL_INT1_IO_ENABLE | BMI088_ACCEL_INT1_GPIO_PP | BMI088_ACCEL_INT1_GPIO_LOW,   BMI088_INT1_IO_CTRL_ERROR},
    {BMI088_INT_MAP_DATA,       BMI088_ACCEL_INT1_DRDY_INTERRUPT,                                                       BMI088_INT_MAP_DATA_ERROR}
};

static const uint8_t BMI088_gyro_reg_config[BMI088_WRITE_GYRO_REG_NUM][3] = {
    {BMI088_GYRO_RANGE,                 BMI088_GYRO_500,                                        BMI088_GYRO_RANGE_ERROR},
    {BMI088_GYRO_BANDWIDTH,             BMI088_GYRO_100_32_HZ | BMI088_GYRO_BANDWIDTH_MUST_SET, BMI088_GYRO_BANDWIDTH_ERROR},
    {BMI088_GYRO_LPM1,                  BMI088_GYRO_NORMAL_MODE,                                BMI088_GYRO_LPM1_ERROR},
    {BMI088_GYRO_CTRL,                  BMI088_DRDY_ON,                                         BMI088_GYRO_CTRL_ERROR},
    {BMI088_GYRO_INT3_INT4_IO_CONFIG,   BMI088_GYRO_INT3_GPIO_PP | BMI088_GYRO_INT3_GPIO_LOW,   BMI088_GYRO_INT3_INT4_IO_CONFIG_ERROR},
    {BMI088_GYRO_INT3_INT4_IO_MAP,      BMI088_GYRO_DRDY_IO_INT3,                               BMI088_GYRO_INT3_INT4_IO_MAP_ERROR}
};

#endif
